{"ast":null,"code":"var _jsxFileName = \"/Users/aboubacardrago/challenges/react-portfolio/src/pages/Contact/Contact.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import \"./Contact.css\";\n\n// function Contact() {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [emptyFields, setEmptyFields] = useState([])\n\n//   useEffect(() => {\n\n//   }, [emptyFields])\n\n//   const requiredFieldsNotification = (<p className=\"required-fields\">Required fields are empty: \n//   {emptyFields.map((f, i)=> {\n//     if (i !== 2) {\n//       return `${f}, `;\n//     } else {\n//       return f;\n//     }\n//   })}\n// </p>);\n// const handleSubmit = (e) => {\n//   e.preventDefault();\n\n//   const mailtoLink = `mailto:dragoaboubacar5@gmail.com?subject=${encodeURIComponent(\"New message from your website\")}&body=${encodeURIComponent(`Name: ${name}\\nEmail: ${email}\\nMessage: ${message}`)}`;\n\n//   // Open the user's default email client with the mailto link\n//   window.location.href = mailtoLink;\n// };\n//   const handleChange = (e) => {\n//     if (e.target.name === \"name\") {\n//       setName(e.target.value);\n//       if(e.target.value !== \"\") {\n//         setEmptyFields(emptyFields.filter((f)=> f !== e.target.name))\n//       } else {\n//         setEmptyFields([...emptyFields, e.target.name]);\n//       }\n//     } else if (e.target.name === \"email\") {\n//       setEmail(e.target.value);\n//       if(e.target.value !== \"\") {\n//         setEmptyFields(emptyFields.filter((f)=> f !== e.target.name))\n//       } else {\n//         setEmptyFields([...emptyFields, e.target.name]);\n//       }\n//     } else if (e.target.name === \"message\") {\n//       setMessage(e.target.value);\n//       if(e.target.value !== \"\") {\n//        setEmptyFields(emptyFields.filter((f)=> f !== e.target.name))\n//       } else {\n//         setEmptyFields([...emptyFields, e.target.name]);\n//       }\n//     }\n//   };\n// // const handleNotification= () =>{\n// //   if(!name)\n// // }\n//   // const handleSubmit = (e) => {\n//   //   e.preventDefault();\n//   // };\n//   return (\n//     <div className=\"form-content\">\n//       <div className=\"form\" onSubmit={handleSubmit}>\n//         <h1>Contact</h1>\n//         <div className=\"sub-form1\">\n//           <label>Name:</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\" \"\n//             value={name}\n//             name=\"name\"\n//             className=\"name-input1\"\n//             onChange={handleChange}\n//           ></input>\n//         </div>\n//         <div className=\"sub-form2\">\n//           <label>Email Address:</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\" \"\n//             value={email}\n//             name=\"email\"\n//             className=\"name-input2\"\n//             onChange={handleChange}\n//           ></input>\n//         </div>\n//         <div className=\"sub-form2\">\n//           <label>Message:</label>\n//           <textarea\n//             type=\"text\"\n//             placeholder=\" \"\n//             value={message}\n//             name=\"message\"\n//             className=\"name-input3\"\n//             onChange={handleChange}\n//           ></textarea>\n//         </div>\n//         <div>\n//           <div className=\"empty-fields\">\n//             {emptyFields.length > 0 && requiredFieldsNotification}\n//           </div>\n//           <button type=\"submit\" id=\"sbm-btn\">\n//             Submit\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Contact;\n\nimport React, { useState } from \"react\";\nimport \"./Contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const mailtoLink = `mailto:dragoaboubacar5@gmail.com?subject=${encodeURIComponent(\"New message from your website\")}&body=${encodeURIComponent(`Name: ${name}\\nEmail: ${email}\\nMessage: ${message}`)}`;\n\n    // Open the user's default email client with the mailto link\n    window.location.href = mailtoLink;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"name\") {\n      setName(value);\n    } else if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"message\") {\n      setMessage(value);\n    }\n\n    // Update emptyFields array based on input value\n    if (value.trim() === \"\") {\n      setEmptyFields(prevEmptyFields => [...prevEmptyFields, name]);\n    } else {\n      setEmptyFields(prevEmptyFields => prevEmptyFields.filter(f => f !== name));\n    }\n  };\n  const requiredFieldsNotification = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"required-fields\",\n    children: [\"Required fields are empty: \", emptyFields.join(\", \")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-form1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          value: name,\n          name: \"name\",\n          className: \"name-input1\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-form2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          value: email,\n          name: \"email\",\n          className: \"name-input2\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-form2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \" \",\n          value: message,\n          name: \"message\",\n          className: \"name-input3\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-fields\",\n          children: emptyFields.length > 0 && requiredFieldsNotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"sbm-btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"gWbwPMUMaANCH4lrfqqVTI4Skp8=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","name","setName","email","setEmail","message","setMessage","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","mailtoLink","encodeURIComponent","window","location","href","handleChange","value","target","trim","prevEmptyFields","filter","f","requiredFieldsNotification","className","children","join","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","length","id","_c","$RefreshReg$"],"sources":["/Users/aboubacardrago/challenges/react-portfolio/src/pages/Contact/Contact.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import \"./Contact.css\";\n\n// function Contact() {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [emptyFields, setEmptyFields] = useState([])\n\n//   useEffect(() => {\n    \n//   }, [emptyFields])\n  \n//   const requiredFieldsNotification = (<p className=\"required-fields\">Required fields are empty: \n//   {emptyFields.map((f, i)=> {\n//     if (i !== 2) {\n//       return `${f}, `;\n//     } else {\n//       return f;\n//     }\n//   })}\n// </p>);\n// const handleSubmit = (e) => {\n//   e.preventDefault();\n\n//   const mailtoLink = `mailto:dragoaboubacar5@gmail.com?subject=${encodeURIComponent(\"New message from your website\")}&body=${encodeURIComponent(`Name: ${name}\\nEmail: ${email}\\nMessage: ${message}`)}`;\n\n//   // Open the user's default email client with the mailto link\n//   window.location.href = mailtoLink;\n// };\n//   const handleChange = (e) => {\n//     if (e.target.name === \"name\") {\n//       setName(e.target.value);\n//       if(e.target.value !== \"\") {\n//         setEmptyFields(emptyFields.filter((f)=> f !== e.target.name))\n//       } else {\n//         setEmptyFields([...emptyFields, e.target.name]);\n//       }\n//     } else if (e.target.name === \"email\") {\n//       setEmail(e.target.value);\n//       if(e.target.value !== \"\") {\n//         setEmptyFields(emptyFields.filter((f)=> f !== e.target.name))\n//       } else {\n//         setEmptyFields([...emptyFields, e.target.name]);\n//       }\n//     } else if (e.target.name === \"message\") {\n//       setMessage(e.target.value);\n//       if(e.target.value !== \"\") {\n//        setEmptyFields(emptyFields.filter((f)=> f !== e.target.name))\n//       } else {\n//         setEmptyFields([...emptyFields, e.target.name]);\n//       }\n//     }\n//   };\n// // const handleNotification= () =>{\n// //   if(!name)\n// // }\n//   // const handleSubmit = (e) => {\n//   //   e.preventDefault();\n//   // };\n//   return (\n//     <div className=\"form-content\">\n//       <div className=\"form\" onSubmit={handleSubmit}>\n//         <h1>Contact</h1>\n//         <div className=\"sub-form1\">\n//           <label>Name:</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\" \"\n//             value={name}\n//             name=\"name\"\n//             className=\"name-input1\"\n//             onChange={handleChange}\n//           ></input>\n//         </div>\n//         <div className=\"sub-form2\">\n//           <label>Email Address:</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\" \"\n//             value={email}\n//             name=\"email\"\n//             className=\"name-input2\"\n//             onChange={handleChange}\n//           ></input>\n//         </div>\n//         <div className=\"sub-form2\">\n//           <label>Message:</label>\n//           <textarea\n//             type=\"text\"\n//             placeholder=\" \"\n//             value={message}\n//             name=\"message\"\n//             className=\"name-input3\"\n//             onChange={handleChange}\n//           ></textarea>\n//         </div>\n//         <div>\n//           <div className=\"empty-fields\">\n//             {emptyFields.length > 0 && requiredFieldsNotification}\n//           </div>\n//           <button type=\"submit\" id=\"sbm-btn\">\n//             Submit\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Contact;\n\n\nimport React, { useState } from \"react\";\nimport \"./Contact.css\";\n\nfunction Contact() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const mailtoLink = `mailto:dragoaboubacar5@gmail.com?subject=${encodeURIComponent(\"New message from your website\")}&body=${encodeURIComponent(`Name: ${name}\\nEmail: ${email}\\nMessage: ${message}`)}`;\n\n    // Open the user's default email client with the mailto link\n    window.location.href = mailtoLink;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"name\") {\n      setName(value);\n    } else if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"message\") {\n      setMessage(value);\n    }\n\n    // Update emptyFields array based on input value\n    if (value.trim() === \"\") {\n      setEmptyFields((prevEmptyFields) => [...prevEmptyFields, name]);\n    } else {\n      setEmptyFields((prevEmptyFields) => prevEmptyFields.filter((f) => f !== name));\n    }\n  };\n\n  const requiredFieldsNotification = (\n    <p className=\"required-fields\">\n      Required fields are empty: {emptyFields.join(\", \")}\n    </p>\n  );\n\n  return (\n    <div className=\"form-content\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h1>Contact</h1>\n        <div className=\"sub-form1\">\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            placeholder=\" \"\n            value={name}\n            name=\"name\"\n            className=\"name-input1\"\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className=\"sub-form2\">\n          <label>Email Address:</label>\n          <input\n            type=\"text\"\n            placeholder=\" \"\n            value={email}\n            name=\"email\"\n            className=\"name-input2\"\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className=\"sub-form2\">\n          <label>Message:</label>\n          <textarea\n            type=\"text\"\n            placeholder=\" \"\n            value={message}\n            name=\"message\"\n            className=\"name-input3\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div>\n          <div className=\"empty-fields\">{emptyFields.length > 0 && requiredFieldsNotification}</div>\n          <button type=\"submit\" id=\"sbm-btn\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}